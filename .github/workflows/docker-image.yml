on:
  push:
    branches: [ main ]

name: Build and push a docker image to AWS ECR

env:
  aws-region: eu-west-1
  image_tag: elixir-api
  ecr_repo: elixir-images-repo

jobs:
  ecr:
    name: Elixir
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create ECR repo if missing
      uses: byu-oit/github-action-create-ecr-repo-if-missing@v1
      with:
        DOCKER_REPO_NAME: ${{ env.ecr_repo }}

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY:  ${{ env.ecr_repo }}
        IMAGE_TAG: ${{ env.image_tag }}
      run: |
        # Build a docker container and
        # push it to ECR.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
